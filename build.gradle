buildscript {
    repositories {
        mavenCentral()
        maven { url = "http://files.minecraftforge.net/maven" }
        maven { url = "https://oss.sonatype.org/content/repositories/snapshots/" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
        classpath 'org.ajoberstar:gradle-git:0.10.1'
    }
}

apply plugin: 'forge'

version = "${mc_version}-${mod_version}.${build_number}"
group= "${package_group}"
archivesBaseName = "${mod_name}"

import org.ajoberstar.grgit.Grgit

def gitHash = 'unknown'
if (new File(projectDir, '.git').exists()) {
    def repo = Grgit.open(project.file('.'))
    //gitHash = repo.log().find().abbreviatedId
}

minecraft {
    version = "${mc_version}-${forge_version}"
    runDir = "run"

    if (project.hasProperty('mappings_version'))
        mappings = project.mappings_version
}

repositories {
	ivy {
		name "CoFHCore"
        artifactPattern "http://addons-origin.cursecdn.com/files/2234/198/[module]-[revision].[ext]"
    }
	ivy {
		name "ThermalExpansion"
        artifactPattern "http://addons-origin.cursecdn.com/files/2234/200/[module]-[revision].[ext]"
    }
	ivy {
		name "ThermalFoundation"
        artifactPattern "http://addons-origin.cursecdn.com/files/2233/780/[module]-[revision].[ext]"
    }
    ivy {
    	name "ThermalDynamics"
    	artifactPattern "http://addons-origin.cursecdn.com/files/2233/787/[module]-[revision].[ext]"
    }
}

dependencies {
	compile name: 'CoFHCore', version: "${cofhcore_version}", ext: 'jar'
	compile name: 'ThermalExpansion', version: "${texpansion_version}", ext: 'jar'
	compile name: 'ThermalFoundation', version: "${tfoundation_version}", ext: 'jar'
	compile name: 'ThermalDynamics', version: "${tdynamics_version}", ext: 'jar'
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include '**/*.info'
        include '**/*.properties'

        expand 'version': project.version, 'mcversion': project.minecraft.version
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude '**/*.info'
        exclude '**/*.properties'
		exclude '**/*.db'
    }
}

jar {
	classifier = 'universal'
    manifest.mainAttributes(
            "Built-By": System.getProperty('user.name'),
            "Created-By": "${System.getProperty('java.vm.version')} + (${System.getProperty('java.vm.vendor')})",
            "Implementation-Title": project.name,
            "Implementation-Version": project.version,
            "Git-Hash": gitHash
    )
}

// add a source jar
task sourceJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

// add a javadoc jar
task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
    classifier = 'javadoc'
}

// because the normal output has been made to be obfuscated
task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
}

tasks.build.dependsOn sourceJar, javadocJar, deobfJar

tasks.withType(JavaCompile) { task ->
    task.options.encoding = 'UTF-8'
}

// Uncomment this line if you want to auto-upload to CurseForge when you build. This requires you to setup curse.gradle yourself.
// fileTree('gradle').include('curse.gradle').collect().sort().each { apply from: it }